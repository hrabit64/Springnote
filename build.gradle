buildscript {
    ext {
        restdocsApiSpecVersion = '0.17.1'
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.epages.restdocs-api-spec' version "${restdocsApiSpecVersion}"
    id 'org.hidetake.swagger.generator' version '2.18.2'
}

group = 'com.springnote'
version = '1.0.0'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }

    testCompileOnly {
        extendsFrom testAnnotationProcessor
    }
}
swaggerSources {
    sample {
        setInputFile(file("${project.buildDir}/api-spec/openapi3.yaml"))
    }
}


openapi3 {
    servers = [
            { url = "http://localhost:8080" }
    ]
    title = "API 문서"
    description = "RestDocsWithSwagger Docs"
    version = "0.0.1"
    format = "yaml"
}

dependencyManagement {
    imports {
        mavenBom("org.testcontainers:testcontainers-bom:1.19.3")
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    compileOnly 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'


    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'com.google.code.gson:gson:2.10.1'

    // https://mvnrepository.com/artifact/com.google.firebase/firebase-admin
    implementation 'com.google.firebase:firebase-admin:9.2.0'

    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-logging
    implementation 'org.springframework.boot:spring-boot-starter-logging'

    implementation 'org.springframework.boot:spring-boot-starter-aop'

    //tests
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation 'org.junit.jupiter:junit-jupiter-params'

    testImplementation 'org.mockito:mockito-core'
    testImplementation 'org.mockito:mockito-junit-jupiter'

    implementation 'com.vladsch.flexmark:flexmark-all:0.64.8'

    // https://mvnrepository.com/artifact/net.coobird/thumbnailator
    implementation 'net.coobird:thumbnailator:0.4.20'

    // https://mvnrepository.com/artifact/org.jsoup/jsoup
    implementation 'org.jsoup:jsoup:1.16.1'

    // QueryDSL
    implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    //testcontainers
    testImplementation "org.testcontainers:mariadb:1.19.8"
    testImplementation "org.testcontainers:junit-jupiter"
    testImplementation "org.testcontainers:jdbc"

    // https://mvnrepository.com/artifact/com.github.gavlyukovskiy/p6spy-spring-boot-starter
    testImplementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.1'

    // https://mvnrepository.com/artifact/com.google.firebase/firebase-admin
    implementation 'com.google.firebase:firebase-admin:9.3.0'

    // https://mvnrepository.com/artifact/org.ahocorasick/ahocorasick
    implementation 'org.ahocorasick:ahocorasick:0.6.3'

    // https://mvnrepository.com/artifact/com.github.database-rider/rider-core
    testImplementation 'com.github.database-rider:rider-core:1.44.0'
    testImplementation 'com.github.database-rider:rider-spring:1.44.0'
    testImplementation 'com.github.database-rider:rider-junit5:1.44.0'

// https://mvnrepository.com/artifact/org.sejda.imageio/webp-imageio
    implementation 'org.sejda.imageio:webp-imageio:0.1.6'

    swaggerUI 'org.webjars:swagger-ui:4.11.1'

    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

    testImplementation 'com.epages:restdocs-api-spec-mockmvc:' + restdocsApiSpecVersion


}
tasks.withType(GenerateSwaggerUI) {
    dependsOn 'openapi3'
}
openapi3 {
    server = 'https://api.springnote.blog'
    title = 'SpringNote API'
    description = 'SpringNote API 문서'
    version = '1.0.0'
    format = 'yaml'
}

bootJar {
    dependsOn generateSwaggerUISample
    from("${generateSwaggerUISample.outputDir}") {
        into 'static/docs'
    }
}
tasks.register('stopAndRemoveMariadbContainers', Exec) {
    description = 'Stop and remove MariaDB containers after tests.'
    commandLine 'bash', '-c', 'docker rm -f $(docker ps -aq --filter ancestor=mariadb:11.2.3)'
    ignoreExitValue = true
}


test {
    useJUnitPlatform()
    systemProperty 'spring.profiles.active', 'test'
    testLogging {
        events "passed", "skipped", "failed"
    }
}

test.finalizedBy(stopAndRemoveMariadbContainers)
test.finalizedBy('openapi3')

